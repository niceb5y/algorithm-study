#include <iostream>
#include <algorithm>
 
 
 /*
 problem:
 계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다. <그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.


예를 들어 <그림 2>와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째, 계단을 밟아 도착점에 도달하면 총 점수는 10 + 20 + 25 + 20 = 75점이 된다.



계단 오르는 데는 다음과 같은 규칙이 있다.

계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.
 
 */
 
using namespace std;
int * array1;
int * array2;
 
int main(void){
        int num;
        cin>>num;
        array1=new int[num];
        array2=new int[num];
        cin>>array1[0];
        array2[0]=0;
        int temp;
        cin>>temp;
        array1[1]=array1[0]+temp;
        array2[1]=temp;
        for(int i=2;i<num;i++){
                cin>>temp;
                array1[i]=array2[i-1]+temp;
                array2[i]=max(array2[i-2],array1[i-2])+temp;
 
        }
        cout<<max(array1[num-1],array2[num-1]);
}

/*
dp문제이다. 
각 계단을 올랐을떄 최고점을 구해서 그 최고점을 다시 이용하여푸는 문제이다.
계단을 1계단 오른 경우와 2계단 오른 경우로 나누어서 풀었다.


*/
